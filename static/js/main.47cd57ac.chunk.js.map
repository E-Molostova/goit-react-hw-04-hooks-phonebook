{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Filter/Filte.module.css"],"names":["module","exports","ContactForm","isContactExist","addNewContact","useState","name","setName","number","setNumber","handleChange","e","target","value","className","style","formContact","onSubmit","preventDefault","alert","inputLabel","type","onChange","pattern","title","required","contactInput","buttonInput","ContactList","contacts","deleteContact","contactsList","map","contact","contactsItem","contactsDeleteBtn","id","onClick","Filter","divFilter","inputFilter","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","newContact","prevState","uuidv4","contactName","some","toLowerCase","includes","console","log","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47cd57ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInput\":\"ContactForm_contactInput__22GtT\",\"buttonInput\":\"ContactForm_buttonInput__XfCqf\",\"formContact\":\"ContactForm_formContact__2apEG\",\"inputLabel\":\"ContactForm_inputLabel__3Qpqw\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ isContactExist, addNewContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (isContactExist(name)) {\r\n      alert(`${name} is already in contacts!`);\r\n    } else {\r\n      addNewContact({ name, number });\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={style.formContact} onSubmit={handleSubmit}>\r\n      <label className={style.inputLabel}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={style.contactInput}\r\n        />\r\n      </label>\r\n      <label className={style.inputLabel}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          onChange={handleChange}\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={style.contactInput}\r\n        />\r\n      </label>\r\n      <button className={style.buttonInput} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n// ContactForm.propTypes = {\r\n//   addNewContact: PropTypes.func.isRequired,\r\n//   isContactExist: PropTypes.func.isRequired,\r\n// }\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={style.contactsList}>\r\n      {contacts.map(contact => (\r\n        <li className={style.contactsItem} key={contact.id}>\r\n          <p>{contact.name + ': ' + contact.number}</p>\r\n          <button\r\n            className={style.contactsDeleteBtn}\r\n            id={contact.id}\r\n            type=\"button\"\r\n            onClick={deleteContact}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport style from './Filte.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={style.divFilter}>\r\n      <label className={style.inputLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={style.inputFilter}\r\n          type=\"text\"\r\n          value={value}\r\n          name=\"search\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(JSON.parse(localStorage.getItem('contacts')) || []);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addNewContact = newContact => {\n    setContacts(prevState => [...prevState, { id: uuidv4(), ...newContact }]);\n  };\n\n  const isContactExist = contactName =>\n    contacts.some(contact => contact.name.toLowerCase() === contactName.toLowerCase());\n\n  const setFilterContact = e => {\n    setFilter(e.target.value);\n  };\n\n  const filteredContacts = () =>\n    contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n\n  const deleteContact = e => {\n    console.log(e.target.id);\n    setContacts(prev => prev.filter(contact => contact.id !== e.target.id));\n  };\n\n  return (\n    <>\n      <div className={'bgImg'}>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={addNewContact} isContactExist={isContactExist} />\n        <h2>Contacts </h2>\n        <Filter value={filter} onChange={setFilterContact} />\n        <ContactList contacts={filteredContacts()} deleteContact={deleteContact} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n\n// class App extends Component {\n\n//   componentDidUpdate(prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     return (\n\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { v4 as uuidv4 } from 'uuid';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__rr4Rw\",\"contactsItem\":\"ContactList_contactsItem__FufpI\",\"contactsDeleteBtn\":\"ContactList_contactsDeleteBtn__2ZgxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filte_inputFilter__2eDUc\",\"inputLabel\":\"Filte_inputLabel__1zsmM\",\"divFilter\":\"Filte_divFilter__jhBCz\"};"],"sourceRoot":""}